name: Deploy to EC2

on:
  push:
    branches: [main, master]
  workflow_dispatch: # Allows manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure SSH key
        run: |
          # Validate secrets are set
          if [ -z "${{ secrets.EC2_HOST }}" ]; then
            echo "ERROR: EC2_HOST secret is not set!"
            exit 1
          fi
          if [ -z "${{ secrets.EC2_SSH_KEY }}" ]; then
            echo "ERROR: EC2_SSH_KEY secret is not set!"
            exit 1
          fi
          
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/deploy_key.pem
          chmod 600 ~/.ssh/deploy_key.pem
          echo "Connecting to EC2_HOST: ${{ secrets.EC2_HOST }}"
          ssh-keyscan ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          echo "SSH configuration completed"

      - name: Deploy to EC2
        run: |
          set -e  # Exit on error
          echo "Deploying to EC2..."
          ssh -i ~/.ssh/deploy_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Navigate to application directory
            cd ${{ secrets.APP_DIRECTORY }}
            
            # Ensure we're pulling from the correct repository
            git remote set-url origin https://github.com/actuallytayyab/vacc-test.git
            
            # Pull latest code
            git pull origin master
            
            # Stop existing containers (try with and without sudo)
            sudo docker-compose down || docker-compose down || true
            
            # Remove old images (optional, to save disk space)
            sudo docker system prune -f || docker system prune -f || true
            
            # Build and start containers (try with and without sudo)
            sudo docker-compose up -d --build || docker-compose up -d --build
            
            # Show running containers
            sudo docker-compose ps || docker-compose ps
            
            echo "Deployment completed successfully!"
          EOF

      - name: Verify deployment
        run: |
          echo "Waiting for services to start..."
          sleep 10
          
          # Check if backend is running (try with and without sudo)
          ssh -i ~/.ssh/deploy_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "sudo docker exec vaccine-backend node -e \"require('http').get('http://localhost:3000/api/health', (res) => { console.log('Backend Health:', res.statusCode === 200 ? 'OK' : 'FAILED'); process.exit(res.statusCode === 200 ? 0 : 1) })\"" || \
          ssh -i ~/.ssh/deploy_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "docker exec vaccine-backend node -e \"require('http').get('http://localhost:3000/api/health', (res) => { console.log('Backend Health:', res.statusCode === 200 ? 'OK' : 'FAILED'); process.exit(res.statusCode === 200 ? 0 : 1) })\""
          
          echo "âœ… All services are running!"

